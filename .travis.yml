sudo: required

# Override default travis gradle steps
# Per docs: https://docs.travis-ci.com/user/customizing-the-build/#Skipping-the-Installation-Step
# install: true
jdk:
  - openjdk8

services:
  - docker # required, but travis uses older version of docker
  - redis-server


env:
  global:
    - PGPORT=5433
    - PGHOST="0.0.0.0"


matrix:
  include:
    - language: java
      services:
        - postgresql
      addons:
        postgresql: "10"
        apt:
          packages:
            - postgresql-10-postgis-2.4
            - postgresql-client-10
            - postgresql-10-postgis-2.4-scripts
            - postgresql-contrib-10
      before_install:
        - sudo sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf
        - sudo service postgresql restart
        - sleep 1
        - sudo -u postgres psql -c 'CREATE DATABASE travis_ci_test'
        - sudo -u postgres psql -c "CREATE USER travis_ci_user WITH PASSWORD 'travis'"
        - sudo -u postgres psql -c 'GRANT ALL PRIVILEGES ON DATABASE "travis_ci_test" TO "travis_ci_user"'
        - sudo -u postgres psql -d postgres -c 'CREATE EXTENSION IF NOT EXISTS intarray'
        - sudo -u postgres psql -d postgres -c 'CREATE EXTENSION IF NOT EXISTS btree_gist'
        - sudo -u postgres psql -d postgres -c 'CREATE EXTENSION IF NOT EXISTS postgis'
      before_script:
        - chmod +x ./gradlew
        - docker --version  # document the version travis is using
      script:
        - ./gradlew assemble
        - ./gradlew check
        - ./gradlew build
        - ./gradlew test
        - ./gradlew codeCoverageReport


      after_success:
        - bash <(curl -s https://codecov.io/bash)
        - pip install --user awscli # install aws cli w/o sudo
        - export PATH=$PATH:$HOME/.local/bin # put aws in the path
        - eval $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION) #needs AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY envvars
        - ./gradlew copyDockerDir
      deploy:
        - skip_cleanup: true
          provider: script
          script: ./gradlew dockerTagImageProdLatest pushImageProdLatest
          on:
            branch: master
        - skip_cleanup: true
          provider: script
          script: ./gradlew dockerTagImageDevLatest pushImageDevLatest
          on:
            branch: master
    - language: node_js
      node_js:
        - "node"
      deploy:
        - skip_cleanup: true
          provider: script
          script: npm run deploy
          on:
            branch: master
        - skip_cleanup: true
          provider: script
          script: npm run deploy-branch
          on:
            all_branches: true
            condition: '"$TRAVIS_BRANCH" != "master" && "$TRAVIS_BRANCH" != "gh-pages"'
